import{_ as T,c as e,j as a,a as t,a5 as n,G as Q,B as p,o as i}from"./chunks/framework.DpqjaF09.js";const L=JSON.parse('{"title":"Using IncompressibleNavierStokes in SciML","description":"","frontmatter":{},"headers":[],"relativePath":"manual/sciml.md","filePath":"manual/sciml.md","lastUpdated":null}'),r={name:"manual/sciml.md"},d={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},o={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-1.577ex"},xmlns:"http://www.w3.org/2000/svg",width:"12.605ex",height:"4.676ex",role:"img",focusable:"false",viewBox:"0 -1370 5571.2 2067","aria-hidden":"true"},h={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},m={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.243ex"},xmlns:"http://www.w3.org/2000/svg",width:"52.497ex",height:"7.618ex",role:"img",focusable:"false",viewBox:"0 -1933.5 23203.8 3367","aria-hidden":"true"},g={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""};function c(u,s,y,E,H,f){const l=p("Badge");return i(),e("div",null,[s[14]||(s[14]=a("h1",{id:"Using-IncompressibleNavierStokes-in-SciML",tabindex:"-1"},[t("Using IncompressibleNavierStokes in SciML "),a("a",{class:"header-anchor",href:"#Using-IncompressibleNavierStokes-in-SciML","aria-label":'Permalink to "Using IncompressibleNavierStokes in SciML {#Using-IncompressibleNavierStokes-in-SciML}"'},"â€‹")],-1)),s[15]||(s[15]=a("p",null,[t("The "),a("a",{href:"https://sciml.ai/",target:"_blank",rel:"noreferrer"},"SciML organization"),t(" is a collection of tools for solving equations and modeling systems. It has a coherent development principle, unified APIs over large collections of equation solvers, pervasive differentiability and sensitivity analysis, and features many of the highest performance and parallel implementations one can find.")],-1)),a("p",null,[s[2]||(s[2]=t("In particular, ")),s[3]||(s[3]=a("a",{href:"https://docs.sciml.ai/DiffEqDocs/stable/",target:"_blank",rel:"noreferrer"},"DifferentialEquations.jl",-1)),s[4]||(s[4]=t(" contains tools to solve differential equations defined as ")),a("mjx-container",d,[(i(),e("svg",o,s[0]||(s[0]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mstyle"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mrow" transform="translate(325.5,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(520,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g></g><rect width="1292" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mo" transform="translate(1809.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2865.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3415.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3804.6,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(4376.6,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4821.2,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(5182.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g></g></g>',1)]))),s[1]||(s[1]=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mstyle",{displaystyle:"true",scriptlevel:"0"},[a("mfrac",null,[a("mrow",null,[a("mi",null,"d"),a("mi",null,"u")]),a("mrow",null,[a("mi",null,"d"),a("mi",null,"t")])])]),a("mo",null,"="),a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("mi",null,"u"),a("mo",null,","),a("mi",null,"t"),a("mo",{stretchy:"false"},")")])],-1))]),s[5]||(s[5]=t(" that include a large collection of solvers, sensitivity analysis, and more."))]),s[16]||(s[16]=a("p",null,"Using IncompressibleNavierStokes it is possible to write the momentum equations without the pressure by explicitly solving the discrete Poisson equation and obtaining:",-1)),a("mjx-container",h,[(i(),e("svg",m,s[6]||(s[6]=[n('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtable"><g data-mml-node="mtr" transform="translate(0,563.5)"><g data-mml-node="mtd"><g data-mml-node="mfrac"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(556,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mrow" transform="translate(570.6,-686)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(556,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g></g><rect width="1818.3" height="60" x="120" y="220"></rect></g></g><g data-mml-node="mtd" transform="translate(2058.3,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1333.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1722.6,0)"><path data-c="1D43C" d="M43 1Q26 1 26 10Q26 12 29 24Q34 43 39 45Q42 46 54 46H60Q120 46 136 53Q137 53 138 54Q143 56 149 77T198 273Q210 318 216 344Q286 624 286 626Q284 630 284 631Q274 637 213 637H193Q184 643 189 662Q193 677 195 680T209 683H213Q285 681 359 681Q481 681 487 683H497Q504 676 504 672T501 655T494 639Q491 637 471 637Q440 637 407 634Q393 631 388 623Q381 609 337 432Q326 385 315 341Q245 65 245 59Q245 52 255 50T307 46H339Q345 38 345 37T342 19Q338 6 332 0H316Q279 2 179 2Q143 2 113 2T65 2T43 1Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(2448.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3449,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(4235,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(714,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mi" transform="translate(5902.7,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6950.7,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8001.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8390.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(8779.7,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(9528.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(9917.7,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(10980,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(11591.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(12591.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(13720.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(14331.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(15331.7,0)"><path data-c="1D43A" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q492 659 471 656T418 643T357 615T294 567T236 496T189 394T158 260Q156 242 156 221Q156 173 170 136T206 79T256 45T308 28T353 24Q407 24 452 47T514 106Q517 114 529 161T541 214Q541 222 528 224T468 227H431Q425 233 425 235T427 254Q431 267 437 273H454Q494 271 594 271Q634 271 659 271T695 272T707 272Q721 272 721 263Q721 261 719 249Q714 230 709 228Q706 227 694 227Q674 227 653 224Q646 221 643 215T629 164Q620 131 614 108Q589 6 586 3Q584 1 581 1Q571 1 553 21T530 52Q530 53 528 52T522 47Q448 -22 322 -22Q201 -22 126 55T50 252Z" style="stroke-width:3;"></path></g><g data-mml-node="msup" transform="translate(16117.7,0)"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z" style="stroke-width:3;"></path></g><g data-mml-node="TeXAtom" transform="translate(714,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z" style="stroke-width:3;"></path></g><g data-mml-node="mn" transform="translate(778,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mi" transform="translate(17785.3,0)"><path data-c="1D44A" d="M436 683Q450 683 486 682T553 680Q604 680 638 681T677 682Q695 682 695 674Q695 670 692 659Q687 641 683 639T661 637Q636 636 621 632T600 624T597 615Q597 603 613 377T629 138L631 141Q633 144 637 151T649 170T666 200T690 241T720 295T759 362Q863 546 877 572T892 604Q892 619 873 628T831 637Q817 637 817 647Q817 650 819 660Q823 676 825 679T839 682Q842 682 856 682T895 682T949 681Q1015 681 1034 683Q1048 683 1048 672Q1048 666 1045 655T1038 640T1028 637Q1006 637 988 631T958 617T939 600T927 584L923 578L754 282Q586 -14 585 -15Q579 -22 561 -22Q546 -22 542 -17Q539 -14 523 229T506 480L494 462Q472 425 366 239Q222 -13 220 -15T215 -19Q210 -22 197 -22Q178 -22 176 -15Q176 -12 154 304T131 622Q129 631 121 633T82 637H58Q51 644 51 648Q52 671 64 683H76Q118 680 176 680Q301 680 313 683H323Q329 677 329 674T327 656Q322 641 318 637H297Q236 634 232 620Q262 160 266 136L501 550L499 587Q496 629 489 632Q483 636 447 637Q428 637 422 639T416 648Q416 650 418 660Q419 664 420 669T421 676T424 680T428 682T436 683Z" style="stroke-width:3;"></path></g><g data-mml-node="mfrac" transform="translate(18833.3,0)"><g data-mml-node="mrow" transform="translate(220,676)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" style="stroke-width:3;"></path></g></g><g data-mml-node="msub" transform="translate(556,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(523,-150) scale(0.707)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z" style="stroke-width:3;"></path></g></g></g><g data-mml-node="mrow" transform="translate(697.6,-686)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="64" d="M376 495Q376 511 376 535T377 568Q377 613 367 624T316 637H298V660Q298 683 300 683L310 684Q320 685 339 686T376 688Q393 689 413 690T443 693T454 694H457V390Q457 84 458 81Q461 61 472 55T517 46H535V0Q533 0 459 -5T380 -11H373V44L365 37Q307 -11 235 -11Q158 -11 96 50T34 215Q34 315 97 378T244 442Q319 442 376 393V495ZM373 342Q328 405 260 405Q211 405 173 369Q146 341 139 305T131 211Q131 155 138 120T173 59Q203 26 251 26Q322 26 373 103V342Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mi" transform="translate(556,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z" style="stroke-width:3;"></path></g></g><rect width="2072.2" height="60" x="120" y="220"></rect></g></g></g><g data-mml-node="mtr" transform="translate(0,-1183.5)"><g data-mml-node="mtd" transform="translate(2058.3,0)"></g><g data-mml-node="mtd" transform="translate(2058.3,0)"><g data-mml-node="mi"></g><g data-mml-node="mo" transform="translate(277.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1333.6,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(1883.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z" style="stroke-width:3;"></path></g><g data-mml-node="msub" transform="translate(2272.6,0)"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(605,-150) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z" style="stroke-width:3;"></path></g></g><g data-mml-node="mo" transform="translate(3334.8,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(3723.8,0)"><path data-c="2E" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60Z" style="stroke-width:3;"></path></g></g></g></g></g></g>',1)]))),s[7]||(s[7]=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("mtable",{displaystyle:"true",columnalign:"right left",columnspacing:"0em",rowspacing:"3pt"},[a("mtr",null,[a("mtd",null,[a("mfrac",null,[a("mrow",null,[a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",{mathvariant:"normal"},"d")]),a("msub",null,[a("mi",null,"u"),a("mi",null,"h")])]),a("mrow",null,[a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",{mathvariant:"normal"},"d")]),a("mi",null,"t")])])]),a("mtd",null,[a("mi"),a("mo",null,"="),a("mo",{stretchy:"false"},"("),a("mi",null,"I"),a("mo",null,"âˆ’"),a("mi",null,"G"),a("msup",null,[a("mi",null,"L"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mo",null,"âˆ’"),a("mn",null,"1")])]),a("mi",null,"W"),a("mi",null,"M"),a("mo",{stretchy:"false"},")"),a("mo",{stretchy:"false"},"("),a("mi",null,"F"),a("mo",{stretchy:"false"},"("),a("msub",null,[a("mi",null,"u"),a("mi",null,"h")]),a("mo",{stretchy:"false"},")"),a("mo",null,"âˆ’"),a("msub",null,[a("mi",null,"y"),a("mi",null,"G")]),a("mo",{stretchy:"false"},")"),a("mo",null,"âˆ’"),a("mi",null,"G"),a("msup",null,[a("mi",null,"L"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mo",null,"âˆ’"),a("mn",null,"1")])]),a("mi",null,"W"),a("mfrac",null,[a("mrow",null,[a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",{mathvariant:"normal"},"d")]),a("msub",null,[a("mi",null,"y"),a("mi",null,"M")])]),a("mrow",null,[a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",{mathvariant:"normal"},"d")]),a("mi",null,"t")])])])]),a("mtr",null,[a("mtd"),a("mtd",null,[a("mi"),a("mo",null,"="),a("mi",null,"f"),a("mo",{stretchy:"false"},"("),a("msub",null,[a("mi",null,"u"),a("mi",null,"h")]),a("mo",{stretchy:"false"},")"),a("mo",null,".")])])])])],-1))]),s[17]||(s[17]=n(`<p>The derivation and the drawbacks of this approach are discussed in the documentation.</p><p>This projected right-hand side can be used in the SciML solvers to solve the Navier-Stokes equations. The following example shows how to use the SciML solvers to solve the ODEs obtained from the Navier-Stokes equations.</p><div class="tip custom-block"><p class="custom-block-title">OrdinaryDiffEqTsit5</p><p>We here use the explicit solver <code>Tsit5</code> from OrdinaryDiffEqTsit5 directly to skip loading all the toolchains for implicit solvers, which takes a while to install on GitHub.</p></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> OrdinaryDiffEqTsit5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IncompressibleNavierStokes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">101</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Setup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ax, ax), Re </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">psolver </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> default_psolver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(setup)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> create_right_hand_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(setup, psolver)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u0 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> random_field</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(setup)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">tspan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># time span where to solve.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">problem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ODEProblem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(f, u0, tspan) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#SciMLBase.ODEProblem</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(problem, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tsit5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), reltol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e-8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, abstol </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e-8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sol: SciMLBase.ODESolution</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>retcode: Success</span></span>
<span class="line"><span>Interpolation: specialized 4th order &quot;free&quot; interpolation</span></span>
<span class="line"><span>t: 227-element Vector{Float64}:</span></span>
<span class="line"><span> 0.0</span></span>
<span class="line"><span> 0.0016402376286913229</span></span>
<span class="line"><span> 0.002397075981197099</span></span>
<span class="line"><span> 0.003612406895090586</span></span>
<span class="line"><span> 0.004640422517986048</span></span>
<span class="line"><span> 0.005826270461249062</span></span>
<span class="line"><span> 0.0069858377791624585</span></span>
<span class="line"><span> 0.008208609532968085</span></span>
<span class="line"><span> 0.009442585294804262</span></span>
<span class="line"><span> 0.010709421448412026</span></span>
<span class="line"><span> â‹®</span></span>
<span class="line"><span> 0.8899636495974363</span></span>
<span class="line"><span> 0.9028181744762229</span></span>
<span class="line"><span> 0.9159817785113439</span></span>
<span class="line"><span> 0.9294598217811365</span></span>
<span class="line"><span> 0.9432561766097831</span></span>
<span class="line"><span> 0.9573738917423089</span></span>
<span class="line"><span> 0.9718139579840791</span></span>
<span class="line"><span> 0.9865766857451195</span></span>
<span class="line"><span> 1.0</span></span>
<span class="line"><span>u: 227-element Vector{Array{Float64, 3}}:</span></span>
<span class="line"><span> [0.4734360818770304 0.4463010764722568 â€¦ 0.4734360818770304 0.4463010764722568; 0.6141964530098953 0.4290467377465374 â€¦ 0.6141964530098953 0.4290467377465374; â€¦ ; 0.4734360818770304 0.4463010764722568 â€¦ 0.4734360818770304 0.4463010764722568; 0.6141964530098953 0.4290467377465374 â€¦ 0.6141964530098953 0.4290467377465374;;; -1.4532271565743624 -1.5150748052229996 â€¦ -1.4532271565743624 -1.5150748052229996; -1.6367895224681581 -1.619535183742433 â€¦ -1.6367895224681581 -1.619535183742433; â€¦ ; -1.4532271565743624 -1.5150748052229996 â€¦ -1.4532271565743624 -1.5150748052229996; -1.6367895224681581 -1.619535183742433 â€¦ -1.6367895224681581 -1.619535183742433]</span></span>
<span class="line"><span> [0.4562640721006979 0.41637397008293076 â€¦ 0.4562640721006979 0.41637397008293076; 0.5603044347278479 0.45458086014623345 â€¦ 0.6505324592986 0.36557942139233557; â€¦ ; 0.4562640721006979 0.4743706085840991 â€¦ 0.5115198954024536 0.41637397008293076; 0.5603044347278479 0.36557942139233557 â€¦ 0.5603044347278479 0.36557942139233557;;; -1.454185595078795 -1.488707408213082 â€¦ -1.454185595078795 -1.488707408213082; -1.6344500038382153 -1.619605888984967 â€¦ -1.6393956374228364 -1.584248560317265; â€¦ ; -1.454185595078795 -1.524124747620946 â€¦ -1.461872043862829 -1.488707408213082; -1.6344500038382153 -1.584248560317265 â€¦ -1.6344500038382153 -1.584248560317265]</span></span>
<span class="line"><span> [0.4474967399773681 0.4011527950390971 â€¦ 0.4474967399773681 0.4011527950390971; 0.5348325412865873 0.4665145770529487 â€¦ 0.6676283219339662 0.3351150711429974; â€¦ ; 0.4474967399773681 0.4873108121301201 â€¦ 0.5292943445397926 0.4011527950390971; 0.5348325412865873 0.3351150711429974 â€¦ 0.5348325412865873 0.3351150711429974;;; -1.4543134003540084 -1.4763627937245114 â€¦ -1.4543134003540084 -1.4763627937245114; -1.633256069795496 -1.619190888207446 â€¦ -1.639987123284621 -1.5679249614324038; â€¦ ; -1.4543134003540084 -1.5278702980403356 â€¦ -1.4654048663717318 -1.4763627937245114; -1.633256069795496 -1.5679249614324038 â€¦ -1.633256069795496 -1.5679249614324038]</span></span>
<span class="line"><span> [0.43224050759289384 0.374843379949534 â€¦ 0.43224050759289384 0.374843379949534; 0.4930906593113047 0.4858604268882081 â€¦ 0.695418603375581 0.28466971824847126; â€¦ ; 0.43224050759289384 0.5080477378649234 â€¦ 0.5580084056998255 0.374843379949534; 0.4930906593113047 0.28466971824847126 â€¦ 0.4930906593113047 0.28466971824847126;;; -1.4541304396195267 -1.4563408024865805 â€¦ -1.4541304396195267 -1.4563408024865805; -1.631258012210897 -1.6179438408436535 â€¦ -1.640131151820372 -1.5417364893312513; â€¦ ; -1.4541304396195267 -1.5332868352075137 â€¦ -1.4704400390374597 -1.4563408024865805; -1.631258012210897 -1.5417364893312513 â€¦ -1.631258012210897 -1.5417364893312513]</span></span>
<span class="line"><span> [0.41816035929962825 0.35080102240273925 â€¦ 0.41816035929962825 0.35080102240273925; 0.45695151572703924 0.5023887613135786 â€¦ 0.7191768075724626 0.24056623885135556; â€¦ ; 0.41816035929962825 0.5255301630140328 â€¦ 0.5823906230146266 0.35080102240273925; 0.45695151572703924 0.24056623885135556 â€¦ 0.45695151572703924 0.24056623885135556;;; -1.4536255513052916 -1.4392442083729997 â€¦ -1.4536255513052916 -1.4392442083729997; -1.6295463300312643 -1.6163396382568729 â€¦ -1.6394810399573296 -1.5196707437386245; â€¦ ; -1.4536255513052916 -1.5372721682712285 â€¦ -1.4740591381276524 -1.4392442083729997; -1.6295463300312643 -1.5196707437386245 â€¦ -1.6295463300312643 -1.5196707437386245]</span></span>
<span class="line"><span> [0.40053544328890206 0.32105439404528224 â€¦ 0.40053544328890206 0.32105439404528224; 0.4142973517818738 0.5216289662423291 â€¦ 0.7467781140685312 0.1881150536676645; â€¦ ; 0.40053544328890206 0.5456116048769252 â€¦ 0.6105352927215794 0.32105439404528224; 0.4142973517818738 0.1881150536676645 â€¦ 0.4142973517818738 0.1881150536676645;;; -1.4526765750701993 -1.4193822170287624 â€¦ -1.4526765750701993 -1.4193822170287624; -1.6276195666080302 -1.6138767334200907 â€¦ -1.637859372054689 -1.4943975519503163; â€¦ ; -1.4526765750701993 -1.5411666836518232 â€¦ -1.4774737419158241 -1.4193822170287624; -1.6276195666080302 -1.4943975519503163 â€¦ -1.6276195666080302 -1.4943975519503163]</span></span>
<span class="line"><span> [0.3818336059528254 0.2899158259016435 â€¦ 0.3818336059528254 0.2899158259016435; 0.37157657963051216 0.5406124472163374 â€¦ 0.7738847640347535 0.1352586527277014; â€¦ ; 0.3818336059528254 0.5651449578382804 â€¦ 0.6379930283551278 0.2899158259016435; 0.37157657963051216 0.1352586527277014 â€¦ 0.37157657963051216 0.1352586527277014;;; -1.4514029039786696 -1.3998596658181477 â€¦ -1.4514029039786696 -1.3998596658181477; -1.6258568292843258 -1.6108481404180763 â€¦ -1.6353806510400202 -1.4699537678022527; â€¦ ; -1.4514029039786696 -1.5442266656410555 â€¦ -1.4799964352686987 -1.3998596658181477; -1.6258568292843258 -1.4699537678022527 â€¦ -1.6258568292843258 -1.4699537678022527]</span></span>
<span class="line"><span> [0.3605137457599996 0.25493356592708893 â€¦ 0.3605137457599996 0.25493356592708893; 0.32544268386749187 0.5608018303015468 â€¦ 0.8025054131515446 0.0779254375135045; â€¦ ; 0.3605137457599996 0.5856196285578463 â€¦ 0.6667935139040201 0.25493356592708893; 0.32544268386749187 0.0779254375135045 â€¦ 0.32544268386749187 0.0779254375135045;;; -1.4497291982893876 -1.3792175747909117 â€¦ -1.4497291982893876 -1.3792175747909117; -1.6242064732435804 -1.6070071907342136 â€¦ -1.631824988990513 -1.4445575564524613; â€¦ ; -1.4497291982893876 -1.5466336824316664 â€¦ -1.4817540085230576 -1.3792175747909117; -1.6242064732435804 -1.4445575564524613 â€¦ -1.6242064732435804 -1.4445575564524613]</span></span>
<span class="line"><span> [0.33732023846795545 0.2174621027231971 â€¦ 0.33732023846795545 0.2174621027231971; 0.27776829672354836 0.5813445666189753 â€¦ 0.8313415970084661 0.018502328079904685; â€¦ ; 0.33732023846795545 0.6061433045860858 â€¦ 0.6956155623187497 0.2174621027231971; 0.27776829672354836 0.018502328079904685 â€¦ 0.27776829672354836 0.018502328079904685;;; -1.4477387543449138 -1.3583853453195356 â€¦ -1.4477387543449138 -1.3583853453195356; -1.6228365732651795 -1.6024766565948332 â€¦ -1.627275394561944 -1.4194175132497853; â€¦ ; -1.4477387543449138 -1.548195500837974 â€¦ -1.4825634536537733 -1.3583853453195356; -1.6228365732651795 -1.4194175132497853 â€¦ -1.6228365732651795 -1.4194175132497853]</span></span>
<span class="line"><span> [0.3117537187091039 0.17680757778618952 â€¦ 0.3117537187091039 0.17680757778618952; 0.22767945362293518 0.6026008622151289 â€¦ 0.8608157095714909 -0.04402787294043712; â€¦ ; 0.3117537187091039 0.6270607971873867 â€¦ 0.7248730467153619 0.17680757778618952; 0.22767945362293518 -0.04402787294043712 â€¦ 0.22767945362293518 -0.04402787294043712;;; -1.4454265578077277 -1.3370591811601205 â€¦ -1.4454265578077277 -1.3370591811601205; -1.621818232129866 -1.5971635575393186 â€¦ -1.6216234925115762 -1.3942153685834; â€¦ ; -1.4454265578077277 -1.5488830071168898 â€¦ -1.4823657095843776 -1.3370591811601205; -1.621818232129866 -1.3942153685834 â€¦ -1.621818232129866 -1.3942153685834]</span></span>
<span class="line"><span> â‹®</span></span>
<span class="line"><span> [-4.439720924229072 -5.707416407264868 â€¦ -4.439720924229072 -5.707416407264868; -5.9222178998993975 0.08668160442973023 â€¦ 0.14196000046887494 -7.058927848504794; â€¦ ; -4.439720924229072 0.09933839992515103 â€¦ 0.1575789160521966 -5.707416407264868; -5.9222178998993975 -7.058927848504794 â€¦ -5.9222178998993975 -7.058927848504794;;; -3.1443432975292316 -3.9640522422453137 â€¦ -3.1443432975292316 -3.9640522422453137; -4.329266640838382 -0.056303800261209756 â€¦ -0.06896059575653135 -5.108831423912651; â€¦ ; -3.1443432975292316 -0.07942210331197191 â€¦ -0.09349221935612574 -3.9640522422453137; -4.329266640838382 -5.108831423912651 â€¦ -4.329266640838382 -5.108831423912651]</span></span>
<span class="line"><span> [-4.442994633327261 -5.709529890860849 â€¦ -4.442994633327261 -5.709529890860849; -5.92326044432335 0.08832892285591472 â€¦ 0.14289708774103202 -7.059265760620536; â€¦ ; -4.442994633327261 0.10030804084834866 â€¦ 0.15783950112977813 -5.709529890860849; -5.92326044432335 -7.059265760620536 â€¦ -5.92326044432335 -7.059265760620536;;; -3.148768413185616 -3.96770081574974 â€¦ -3.148768413185616 -3.96770081574974; -4.3336862509218985 -0.05967411996730605 â€¦ -0.07165323795964067 -5.112594322928177; â€¦ ; -3.148768413185616 -0.08238685751802283 â€¦ -0.0957391974755104 -3.96770081574974; -4.3336862509218985 -5.112594322928177 â€¦ -4.3336862509218985 -5.112594322928177]</span></span>
<span class="line"><span> [-4.446524215704983 -5.71188950236674 â€¦ -4.446524215704983 -5.71188950236674; -5.9245288278949655 0.09000459437150746 â€¦ 0.14384506963872545 -7.059822059774172; â€¦ ; -4.446524215704983 0.10135370438220856 â€¦ 0.1581512842615969 -5.71188950236674; -5.9245288278949655 -7.059822059774172 â€¦ -5.9245288278949655 -7.059822059774172;;; -3.153046416979109 -3.9712164385309445 â€¦ -3.153046416979109 -3.9712164385309445; -4.338028304691927 -0.0627498095181735 â€¦ -0.07409891952877493 -5.116252018452908; â€¦ ; -3.153046416979109 -0.08503941498393709 â€¦ -0.09768473859832041 -3.9712164385309445; -4.338028304691927 -5.116252018452908 â€¦ -4.338028304691927 -5.116252018452908]</span></span>
<span class="line"><span> [-4.450296555160927 -5.714485333357533 â€¦ -4.450296555160927 -5.714485333357533; -5.926013851499339 0.09170439329652229 â€¦ 0.14480605263259047 -7.060589017623467; â€¦ ; -4.450296555160927 0.10246400240970535 â€¦ 0.15850775930015681 -5.714485333357533; -5.926013851499339 -7.060589017623467 â€¦ -5.926013851499339 -7.060589017623467;;; -3.157175754666418 -3.9746049422859584 â€¦ -3.157175754666418 -3.9746049422859584; -4.342284873087745 -0.06551076393694706 â€¦ -0.07627037305003066 -5.119805515970473; â€¦ ; -3.157175754666418 -0.08736262774580075 â€¦ -0.09930627593485397 -3.9746049422859584; -4.342284873087745 -5.119805515970473 â€¦ -4.342284873087745 -5.119805515970473]</span></span>
<span class="line"><span> [-4.454297484727637 -5.71730638962553 â€¦ -4.454297484727637 -5.71730638962553; -5.927705383518066 0.0934213784324298 â€¦ 0.14577867588950513 -7.061557926775995; â€¦ ; -4.454297484727637 0.10362469706914453 â€¦ 0.15889891851082297 -5.71730638962553; -5.927705383518066 -7.061557926775995 â€¦ -5.927705383518066 -7.061557926775995;;; -3.1611571807909153 -3.977873192141896 â€¦ -3.1611571807909153 -3.977873192141896; -4.346449087336553 -0.06793925975638389 â€¦ -0.07814257839299925 -5.123256344964008; â€¦ ; -3.1611571807909153 -0.08934281366488296 â€¦ -0.10058535530357104 -3.977873192141896; -4.346449087336553 -5.123256344964008 â€¦ -4.346449087336553 -5.123256344964008]</span></span>
<span class="line"><span> [-4.458512063508811 -5.720340764560602 â€¦ -4.458512063508811 -5.720340764560602; -5.929592500101858 0.0951460893296602 â€¦ 0.1467581444412772 -7.062719189841996; â€¦ ; -4.458512063508811 0.10481912218594121 â€¦ 0.15931157560460368 -5.720340764560602; -5.929592500101858 -7.062719189841996 â€¦ -5.929592500101858 -7.062719189841996;;; -3.1649941161771045 -3.981029272276327 â€¦ -3.1649941161771045 -3.981029272276327; -4.350515778384794 -0.07002073122642731 â€¦ -0.07969376408260917 -5.126606957295378; â€¦ ; -3.1649941161771045 -0.09097031922604225 â€¦ -0.101508349508042 -3.981029272276327; -4.350515778384794 -5.126606957295378 â€¦ -4.350515778384794 -5.126606957295378]</span></span>
<span class="line"><span> [-4.462924300672943 -5.723575426506125 â€¦ -4.462924300672943 -5.723575426506125; -5.931663387550127 0.0968666424414584 â€¦ 0.14773631087905742 -7.06406227343152; â€¦ ; -4.462924300672943 0.10602857672594343 â€¦ 0.15972980937324888 -5.723575426506125; -5.931663387550127 -7.06406227343152 â€¦ -5.931663387550127 -7.06406227343152;;; -3.1686923360045514 -3.9840821611247517 â€¦ -3.1686923360045514 -3.9840821611247517; -4.3544814680287685 -0.0717441496951091 â€¦ -0.08090608397949531 -5.129860604640548; â€¦ ; -3.1686923360045514 -0.09223970035844622 â€¦ -0.10206684514114926 -3.9840821611247517; -4.3544814680287685 -5.129860604640548 â€¦ -4.3544814680287685 -5.129860604640548]</span></span>
<span class="line"><span> [-4.467517654223694 -5.726996568851628 â€¦ -4.467517654223694 -5.726996568851628; -5.9339055863972305 0.09856927423949809 â€¦ 0.14870211814099904 -7.065575873479373; â€¦ ; -4.467517654223694 0.1072330440040104 â€¦ 0.16013563176502818 -5.726996568851628; -5.9339055863972305 -7.065575873479373 â€¦ -5.9339055863972305 -7.065575873479373;;; -3.172260245518874 -3.9870419337668577 â€¦ -3.172260245518874 -3.9870419337668577; -4.358345014442325 -0.07310269785951715 â€¦ -0.08176646762393057 -5.133021779231062; â€¦ ; -3.172260245518874 -0.0931500828233682 â€¦ -0.10225802556739133 -3.9870419337668577; -4.358345014442325 -5.133021779231062 â€¦ -4.358345014442325 -5.133021779231062]</span></span>
<span class="line"><span> [-4.4717485586471915 -5.730189721041225 â€¦ -4.4717485586471915 -5.730189721041225; -5.936036859125993 0.10005872681148513 â€¦ 0.14954123987627557 -7.067058221553568; â€¦ ; -4.4717485586471915 0.10828510856800652 â€¦ 0.16047105075060475 -5.730189721041225; -5.936036859125993 -7.067058221553568 â€¦ -5.936036859125993 -7.067058221553568;;; -3.1753377551925777 -3.9896091937006264 â€¦ -3.1753377551925777 -3.9896091937006264; -4.361701920612559 -0.07400365881108312 â€¦ -0.08223004056750566 -5.135764747374798; â€¦ ; -3.1753377551925777 -0.09366161844617996 â€¦ -0.10212109535895503 -3.9896091937006264; -4.361701920612559 -5.135764747374798 â€¦ -4.361701920612559 -5.135764747374798]</span></span></code></pre></div><p>Alternatively, it is also possible to use an <a href="https://docs.sciml.ai/DiffEqDocs/stable/basics/problem/#In-place-vs-Out-of-Place-Function-Definition-Forms" target="_blank" rel="noreferrer">in-place formulation</a></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">f!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(du,u,p,t) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> right_hand_side!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(du, u, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Ref</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([setup, psolver]), t)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">u </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">du </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> similar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(u0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.0</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">f!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(du,u,p,t)</span></span></code></pre></div><p>that is usually faster than the out-of-place formulation.</p><p>You can look <a href="https://docs.sciml.ai/DiffEqDocs/stable/basics/overview/" target="_blank" rel="noreferrer">here</a> for more information on how to use the SciML solvers and all the options available.</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">â€‹</a></h2>`,10)),a("details",g,[a("summary",null,[s[8]||(s[8]=a("a",{id:"IncompressibleNavierStokes.create_right_hand_side-Tuple{Any, Any}",href:"#IncompressibleNavierStokes.create_right_hand_side-Tuple{Any, Any}"},[a("span",{class:"jlbinding"},"IncompressibleNavierStokes.create_right_hand_side")],-1)),s[9]||(s[9]=t()),Q(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[10]||(s[10]=n(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">create_right_hand_side</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    setup,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    psolver</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IncompressibleNavierStokes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var&quot;#right_hand_side#343&quot;</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>create_right_hand_side(setup, psolver)</span></span></code></pre></div><p>Creates a function that computes the right-hand side of the Navier-Stokes equations for a given setup and pressure solver.</p><p><strong>Arguments</strong></p><ul><li><p><code>setup</code>: The simulation setup containing grid and boundary conditions.</p></li><li><p><code>psolver</code>: The pressure solver to be used.</p></li></ul><p><strong>Returns</strong></p><p>A function that computes the right-hand side of the Navier-Stokes equations.</p><p><a href="https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/ecbed4a3cb34efcc58b4a88af99ea267e5b360eb/src/sciml.jl#L1" target="_blank" rel="noreferrer">source</a></p>`,8))]),a("details",k,[a("summary",null,[s[11]||(s[11]=a("a",{id:"IncompressibleNavierStokes.right_hand_side!-NTuple{4, Any}",href:"#IncompressibleNavierStokes.right_hand_side!-NTuple{4, Any}"},[a("span",{class:"jlbinding"},"IncompressibleNavierStokes.right_hand_side!")],-1)),s[12]||(s[12]=t()),Q(l,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[13]||(s[13]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">right_hand_side!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dudt, u, params_ref, t)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>right_hand_side!(dudt, u, params_ref, t)</span></span></code></pre></div><p>Computes the right-hand side of the Navier-Stokes equations in-place.</p><p><strong>Arguments</strong></p><ul><li><p><code>dudt</code>: The array to store the computed right-hand side.</p></li><li><p><code>u</code>: The current velocity field.</p></li><li><p><code>params_ref</code>: A reference to the parameters containing the setup and pressure solver.</p></li><li><p><code>t</code>: The current time.</p></li></ul><p><strong>Returns</strong></p><p>Nothing. The result is stored in <code>dudt</code>.</p><p><a href="https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/ecbed4a3cb34efcc58b4a88af99ea267e5b360eb/src/sciml.jl#L21" target="_blank" rel="noreferrer">source</a></p>',8))])])}const v=T(r,[["render",c]]);export{L as __pageData,v as default};
