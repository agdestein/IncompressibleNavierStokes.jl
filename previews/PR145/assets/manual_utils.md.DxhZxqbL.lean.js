import{_ as r,C as d,c as p,o,j as i,a as t,G as l,w as a,ai as n}from"./chunks/framework.XVDA9i5b.js";const A=JSON.parse('{"title":"Utils","description":"","frontmatter":{},"headers":[],"relativePath":"manual/utils.md","filePath":"manual/utils.md","lastUpdated":null}'),k={name:"manual/utils.md"},h={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},g={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.489ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.779ex",height:"1.995ex",role:"img",focusable:"false",viewBox:"0 -666 2996.4 882","aria-hidden":"true"},c={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""};function v(_,s,Q,j,C,x){const e=d("Badge");return o(),p("div",null,[s[42]||(s[42]=i("h1",{id:"utils",tabindex:"-1"},[t("Utils "),i("a",{class:"header-anchor",href:"#utils","aria-label":'Permalink to "Utils"'},"​")],-1)),i("details",h,[i("summary",null,[s[0]||(s[0]=i("a",{id:"IncompressibleNavierStokes.enzyme_wrap",href:"#IncompressibleNavierStokes.enzyme_wrap"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.enzyme_wrap")],-1)),s[1]||(s[1]=t()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[3]||(s[3]=i("p",null,[t("Wrap a function to return "),i("code",null,"nothing"),t(", because Enzyme can not handle vector return values.")],-1)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[2]||(s[2]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L1",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",u,[i("summary",null,[s[4]||(s[4]=i("a",{id:"IncompressibleNavierStokes.get_lims",href:"#IncompressibleNavierStokes.get_lims"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.get_lims")],-1)),s[5]||(s[5]=t()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[17]||(s[17]=n("",1)),i("p",null,[s[8]||(s[8]=t("Get approximate lower and upper limits of a field ")),s[9]||(s[9]=i("code",null,"x",-1)),s[10]||(s[10]=t(" based on the mean and standard deviation (")),i("mjx-container",g,[(o(),p("svg",b,s[6]||(s[6]=[n("",1)]))),s[7]||(s[7]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"μ"),i("mo",null,"±"),i("mi",null,"n"),i("mi",null,"σ")])],-1))]),s[11]||(s[11]=t("). If ")),s[12]||(s[12]=i("code",null,"x",-1)),s[13]||(s[13]=t(" is constant, a margin of ")),s[14]||(s[14]=i("code",null,"1e-4",-1)),s[15]||(s[15]=t(" is enforced. This is required for contour plotting functions that require a certain range."))]),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[16]||(s[16]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L30",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",c,[i("summary",null,[s[18]||(s[18]=i("a",{id:"IncompressibleNavierStokes.get_spectrum-Tuple{Any}",href:"#IncompressibleNavierStokes.get_spectrum-Tuple{Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.get_spectrum")],-1)),s[19]||(s[19]=t()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[21]||(s[21]=n("",2)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[20]||(s[20]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L116",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",m,[i("summary",null,[s[22]||(s[22]=i("a",{id:"IncompressibleNavierStokes.getoffset-Tuple{Any}",href:"#IncompressibleNavierStokes.getoffset-Tuple{Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.getoffset")],-1)),s[23]||(s[23]=t()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[25]||(s[25]=n("",2)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[24]||(s[24]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L21",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",y,[i("summary",null,[s[26]||(s[26]=i("a",{id:"IncompressibleNavierStokes.getval-Union{Tuple{Val{x}}, Tuple{x}} where x",href:"#IncompressibleNavierStokes.getval-Union{Tuple{Val{x}}, Tuple{x}} where x"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.getval")],-1)),s[27]||(s[27]=t()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[29]||(s[29]=n("",2)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[28]||(s[28]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L18",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",E,[i("summary",null,[s[30]||(s[30]=i("a",{id:"IncompressibleNavierStokes.plotgrid",href:"#IncompressibleNavierStokes.plotgrid"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.plotgrid")],-1)),s[31]||(s[31]=t()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[33]||(s[33]=n("",2)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[32]||(s[32]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L43",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",T,[i("summary",null,[s[34]||(s[34]=i("a",{id:"IncompressibleNavierStokes.spectral_stuff-Tuple{Any}",href:"#IncompressibleNavierStokes.spectral_stuff-Tuple{Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.spectral_stuff")],-1)),s[35]||(s[35]=t()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[37]||(s[37]=n("",2)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[36]||(s[36]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L51",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),i("details",f,[i("summary",null,[s[38]||(s[38]=i("a",{id:"IncompressibleNavierStokes.splitseed-Tuple{Any, Any}",href:"#IncompressibleNavierStokes.splitseed-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.splitseed")],-1)),s[39]||(s[39]=t()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[41]||(s[41]=n("",2)),l(e,{type:"info",class:"source-link",text:"source"},{default:a(()=>s[40]||(s[40]=[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/f1b817c08208d1bd3111eefb02abbc4f657f18c1/src/utils.jl#L27",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const F=r(k,[["render",v]]);export{A as __pageData,F as default};
