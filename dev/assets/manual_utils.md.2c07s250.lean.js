import{_ as r,c as n,j as i,a as e,G as l,ai as t,B as o,o as p}from"./chunks/framework.BQ_0h9Ot.js";const A=JSON.parse('{"title":"Utils","description":"","frontmatter":{},"headers":[],"relativePath":"manual/utils.md","filePath":"manual/utils.md","lastUpdated":null}'),d={name:"manual/utils.md"},k={class:"jldocstring custom-block",open:""},h={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},g={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.489ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.779ex",height:"1.995ex",role:"img",focusable:"false",viewBox:"0 -666 2996.4 882","aria-hidden":"true"},u={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""};function b(f,s,v,_,Q,C){const a=o("Badge");return p(),n("div",null,[s[32]||(s[32]=i("h1",{id:"utils",tabindex:"-1"},[e("Utils "),i("a",{class:"header-anchor",href:"#utils","aria-label":'Permalink to "Utils"'},"​")],-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"IncompressibleNavierStokes.get_lims",href:"#IncompressibleNavierStokes.get_lims"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.get_lims")],-1)),s[1]||(s[1]=e()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[12]||(s[12]=t("",1)),i("p",null,[s[4]||(s[4]=e("Get approximate lower and upper limits of a field ")),s[5]||(s[5]=i("code",null,"x",-1)),s[6]||(s[6]=e(" based on the mean and standard deviation (")),i("mjx-container",h,[(p(),n("svg",g,s[2]||(s[2]=[t("",1)]))),s[3]||(s[3]=i("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[i("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[i("mi",null,"μ"),i("mo",null,"±"),i("mi",null,"n"),i("mi",null,"σ")])],-1))]),s[7]||(s[7]=e("). If ")),s[8]||(s[8]=i("code",null,"x",-1)),s[9]||(s[9]=e(" is constant, a margin of ")),s[10]||(s[10]=i("code",null,"1e-4",-1)),s[11]||(s[11]=e(" is enforced. This is required for contour plotting functions that require a certain range."))]),s[13]||(s[13]=i("p",null,[i("a",{href:"https://github.com/agdestein/IncompressibleNavierStokes.jl/blob/8fecfd58e0e8db0a0c38a46d2f755aa6cc2c8231/src/utils.jl#L27",target:"_blank",rel:"noreferrer"},"source")],-1))]),i("details",u,[i("summary",null,[s[14]||(s[14]=i("a",{id:"IncompressibleNavierStokes.get_spectrum-Tuple{Any}",href:"#IncompressibleNavierStokes.get_spectrum-Tuple{Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.get_spectrum")],-1)),s[15]||(s[15]=e()),l(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[16]||(s[16]=t("",3))]),i("details",c,[i("summary",null,[s[17]||(s[17]=i("a",{id:"IncompressibleNavierStokes.getoffset-Tuple{Any}",href:"#IncompressibleNavierStokes.getoffset-Tuple{Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.getoffset")],-1)),s[18]||(s[18]=e()),l(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[19]||(s[19]=t("",3))]),i("details",E,[i("summary",null,[s[20]||(s[20]=i("a",{id:"IncompressibleNavierStokes.getval-Union{Tuple{Val{x}}, Tuple{x}} where x",href:"#IncompressibleNavierStokes.getval-Union{Tuple{Val{x}}, Tuple{x}} where x"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.getval")],-1)),s[21]||(s[21]=e()),l(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[22]||(s[22]=t("",3))]),i("details",m,[i("summary",null,[s[23]||(s[23]=i("a",{id:"IncompressibleNavierStokes.plotgrid",href:"#IncompressibleNavierStokes.plotgrid"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.plotgrid")],-1)),s[24]||(s[24]=e()),l(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[25]||(s[25]=t("",3))]),i("details",T,[i("summary",null,[s[26]||(s[26]=i("a",{id:"IncompressibleNavierStokes.spectral_stuff-Tuple{Any}",href:"#IncompressibleNavierStokes.spectral_stuff-Tuple{Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.spectral_stuff")],-1)),s[27]||(s[27]=e()),l(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[28]||(s[28]=t("",3))]),i("details",y,[i("summary",null,[s[29]||(s[29]=i("a",{id:"IncompressibleNavierStokes.splitseed-Tuple{Any, Any}",href:"#IncompressibleNavierStokes.splitseed-Tuple{Any, Any}"},[i("span",{class:"jlbinding"},"IncompressibleNavierStokes.splitseed")],-1)),s[30]||(s[30]=e()),l(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[31]||(s[31]=t("",3))])])}const x=r(d,[["render",b]]);export{A as __pageData,x as default};
